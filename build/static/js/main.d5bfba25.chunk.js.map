{"version":3,"sources":["components/Task.js","components/Taskbar.js","components/Header.js","components/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["Task","Container","styled","div","Taskbar","Header","Profile","TaskSection","Buffer","App","Main","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAWeA,EARF,WACT,OACI,cAACC,EAAD,KAQFA,EAAYC,IAAOC,IAAV,oGCMAC,EAfC,WACZ,OACI,eAAC,EAAD,WACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IAAQ,cAAC,EAAD,IACR,cAAC,EAAD,IAAQ,cAAC,EAAD,IACR,cAAC,EAAD,IAAQ,cAAC,EAAD,IACR,cAAC,EAAD,IAAQ,cAAC,EAAD,IACR,cAAC,EAAD,QAONH,EAAYC,IAAOC,IAAV,6RCXAE,EAPA,WACX,OACI,cAAC,EAAD,KAOFJ,EAAYC,IAAOC,IAAV,wICKAG,EAbC,WACZ,OACI,eAAC,EAAD,WACI,cAAC,EAAD,IACA,eAACC,EAAD,WACI,cAACC,EAAD,IACI,cAAC,EAAD,IACJ,cAACA,EAAD,WAQVP,EAAYC,IAAOC,IAAV,4TAiBTI,EAAcL,IAAOC,IAAV,8HAMXK,EAASN,IAAOC,IAAV,oEC5BGM,MATf,WACE,OACE,eAACC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,QAOAA,EAAOR,IAAOC,IAAV,uGCJKQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d5bfba25.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport Card from 'react-bootstrap/Card';\n\nconst Task = () => {\n    return (\n        <Container>\n            \n        </Container>\n    )\n}\n\nexport default Task\n\nconst Container = styled.div`\n    width: 100%;\n    height: 60px;       \n    border: 1px solid red;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport Task from './Task.js';\n\nconst Taskbar = () => {\n    return (\n        <Container>\n            <Task />\n            <Task />\n            <Task />\n            <Task /><Task />\n            <Task /><Task />\n            <Task /><Task />\n            <Task /><Task />\n            <Task />\n        </Container>\n    )\n}\n\nexport default Taskbar\n\nconst Container = styled.div`\n    width: 90%;\n    height: 100%;\n    max-height: 600px;\n    max-width: 500px;\n    padding: 0;     \n    margin: 0;\n    overflow-y: scroll;\n    overflow-x: hidden;\n    justify-content: center;\n    align-self: center;\n    background-color: yellow;\n`\n\n\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Header = () => {\n    return (\n        <Container>\n        </Container>\n    )\n}\n\nexport default Header\n\nconst Container = styled.div`\n    width: 100%;\n    height: 100px;     \n    padding: 0;\n    margin: 0;\n    background-color: green;  \n`","import styled from 'styled-components'\nimport Taskbar from './Taskbar.js';\nimport Header from './Header.js';\n\nconst Profile = () => {\n    return (\n        <Container>\n            <Header />\n            <TaskSection>\n                <Buffer />\n                    <Taskbar />\n                <Buffer />\n            </TaskSection>\n        </Container>\n    )\n}\n\nexport default Profile\n\nconst Container = styled.div`\n    width: 50%;\n    height: 100%;\n    min-width: 400px;\n    min-height: 600px;\n    margin: 0;\n    padding: 0;\n    background-color: blue;\n    justify-content: center;\n    align-items: center;\n\n    @media screen and (max-width: 800px) {\n     {\n         width: 100%;\n    }\n}\n`\nconst TaskSection = styled.div`\n    width: 100%;\n    background-color: orange;\n    display: flex;\n    flex-direction: column;\n`\nconst Buffer = styled.div`\n    width: 10%;\n    flex-shrink: 100;\n`\n\n","import './App.css';\nimport Profile from './components/Profile.js';\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport styled from 'styled-components'\n\nfunction App() {\n  return (\n    <Main>\n      <Profile />  \n      <Profile />  \n    </Main>\n  );\n}\n\nexport default App;\n\nconst Main = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  flex-wrap: wrap;\n\n`\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}